{"version":3,"sources":["components/FilmPoster.js","components/Fave.js","components/FilmRow.js","components/FilmListing.js","components/FilmDetails.js","TMDB.js","App.js","registerServiceWorker.js","index.js"],"names":["FilmPoster","props","posterUrl","film","poster_path","react_default","a","createElement","src","alt","Fave","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isFave","handleClick","bind","assertThisInitialized","e","stopPropagation","onFaveToggle","className","concat","onClick","Component","FilmRow","year","Date","release_date","getFullYear","onDetailsClick","title","id","Fave_Fave","FilmListing","handleFilterClick","option","setState","filter","films","faves","_this2","filmRow","map","key","includes","length","FilmDetails","backdropUrl","backdrop_path","details","tagline","overview","dotenv","config","TMDB","api_key","process","App","handleFaveToggle","slice","filmIndex","indexOf","push","splice","handleDetailsClick","url","fetch","then","response","json","data","current","FilmListing_FilmListing","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b473d29.chunk.js","sourcesContent":["import React from \"react\";\n\n// Step8\nexport default function FilmPoster(props) {\n  const posterUrl = \"https://image.tmdb.org/t/p/w780/\" + props.film.poster_path;\n\n  return (\n    <div>\n      <img src={posterUrl} alt=\"\" />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Fave extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFave: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.stopPropagation();\n    // console.log(\"handling Fave click!\");\n\n    // Add this line. You'll call the function passed through props.\n    this.props.onFaveToggle();\n\n    // Delete the `setState` line. You no longer track state here.\n    // this.setState({isFave: !this.state.isFave});\n  }\n\n  render() {\n    const isFave = this.props.isFave ? \"remove_from_queue\" : \"add_to_queue\";\n    return (\n      <div className={`film-row-fave ${isFave}`} onClick={this.handleClick}>\n        <p className=\"material-icons\">{isFave}</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport FilmPoster from \"./FilmPoster\";\nimport Fave from \"./Fave\";\n\n//Step6\nexport default function FilmRow(props) {\n  const date = new Date(props.film.release_date);\n  // console.log(date);\n  const year = date.getFullYear();\n\n  return (\n    <div\n      className=\"film-row\"\n      onClick={() => props.onDetailsClick(props.film.title, props.film.id)}\n    >\n      {/* Step 8 */}\n      <FilmPoster film={props.film} />\n\n      <div className=\"film-summary\">\n        {/* Step 7 */}\n        <h1>{props.film.title}</h1>\n        <p>{year}</p>\n      </div>\n      <Fave onFaveToggle={props.onFaveToggle} isFave={props.isFave} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport FilmRow from \"./FilmRow\";\n\n//Step 2\nexport default class FilmListing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: \"all\",\n      films: props.films,\n    };\n    this.handleFilterClick = this.handleFilterClick.bind(this);\n  }\n\n  handleFilterClick = (option) => {\n    // console.log(`Setting filter to ${option}`);\n\n    this.setState({\n      filter: option,\n      films: this.state.filter === \"all\" ? this.props.films : this.props.faves,\n    });\n  };\n  render() {\n    //Step 5\n    // let allFilms = this.props.films.map((film, index) =>\n\n    //     <h1 key= {index} >{film.title}</h1>\n    // )\n\n    // console.log(this.state.films);\n    // Step 6\n    const filmRow = this.state.films.map((film) => (\n      <FilmRow\n        key={film.id}\n        id={film.id}\n        film={film}\n        onFaveToggle={() => this.props.onFaveToggle(film)}\n        isFave={this.props.faves.includes(film)}\n        onDetailsClick={this.props.onDetailsClick}\n      />\n    ));\n\n    return (\n      <div className=\"film-list\">\n        <h1 className=\"section-title\">FILMS</h1>\n        <div className=\"film-list-filters\">\n          <div\n            className={`film-list-filter ${\n              this.state.filter === \"all\" ? \"is-active\" : \"\"\n            }`}\n            onClick={() => this.handleFilterClick(\"all\")}\n          >\n            ALL\n            <span className=\"section-count\">{this.props.films.length}</span>\n          </div>\n          <div\n            className={`film-list-filter ${\n              this.state.filter === \"faves\" ? \"is-active\" : \"\"\n            }`}\n            onClick={() => this.handleFilterClick(\"faves\")}\n          >\n            FAVES\n            <span className=\"section-count\">{this.props.faves.length}</span>\n          </div>\n        </div>\n        {/* Step4\n                    <h1>it</h1> */}\n        {/* {allFilms} */}\n        {/* {\n                        TMDB.films.map((film, index) => (\n                            <h1 key= {index} >{film.title}</h1>\n                        ))\n                    } */}\n        {filmRow}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n//Step 2\nexport default function FilmDetails(props) {\n  const backdropUrl = `https://image.tmdb.org/t/p/w1280/${props.films.backdrop_path}`;\n  const posterUrl = `https://image.tmdb.org/t/p/w780/${props.films.poster_path}`;\n\n  let details = !props.films.id ? (\n    <div className=\"film-detail\">\n      <p>\n        <i className=\"material-icons\">subscriptions</i>\n        <span>No film selected</span>\n      </p>\n    </div>\n  ) : (\n    <div className=\"film-detail is-hydrated\">\n      <figure className=\"film-backdrop\">\n        <img src={backdropUrl} alt=\"\" />\n        <h1 className=\"film-title\">{props.films.title}</h1>\n      </figure>\n\n      <div className=\"film-meta\">\n        <h2 className=\"film-tagline\">{props.films.tagline}</h2>\n        <p className=\"film-detail-overview\">\n          <img\n            src={posterUrl}\n            className=\"film-detail-poster\"\n            alt={props.films.title}\n          />\n          {props.films.overview}\n        </p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"film-details\">\n      <h1 className=\"section-title\">DETAILS</h1>\n      {details}\n    </div>\n  );\n}\n","import dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst TMDB = {\n  api_key: process.env.REACT_APP_TMDB_API_KEY,\n  films: [\n    {\n      id: 346364,\n      title: \"It\",\n      poster_path: \"/9E2y5Q7WlCVNEhP5GiVTjhEhx1o.jpg\",\n      backdrop_path: \"/tcheoA2nPATCm2vvXw2hVQoaEFD.jpg\",\n      overview:\n        \"In a small town in Maine, seven children known as The Losers Club come face to face with life problems, bullies and a monster that takes the shape of a clown called Pennywise.\",\n      release_date: \"2017-09-05\",\n    },\n    {\n      id: 343668,\n      title: \"Kingsman: The Golden Circle\",\n      poster_path: \"/pKESfn2Pdy0b7drvZHQb7UzgqoY.jpg\",\n      backdrop_path: \"/uExPmkOHJySrbJyJDJylHDqaT58.jpg\",\n      overview:\n        \"When an attack on the Kingsman headquarters takes place and a new villain rises, Eggsy and Merlin are forced to work together with the American agency known as the Statesman to save the world.\",\n      release_date: \"2017-09-20\",\n    },\n    {\n      id: 339403,\n      title: \"Baby Driver\",\n      poster_path: \"/dN9LbVNNZFITwfaRjl4tmwGWkRg.jpg\",\n      backdrop_path: \"/goCvLSUFz0p7k8R10Hv4CVh3EQv.jpg\",\n      overview:\n        \"After being coerced into working for a crime boss, a young getaway driver finds himself taking part in a heist doomed to fail.\",\n      release_date: \"2017-06-28\",\n    },\n    {\n      id: 335984,\n      title: \"Blade Runner 2049\",\n      poster_path: \"/cbRQVCia0urtv5UGsVFTdqLDIRv.jpg\",\n      backdrop_path: \"/zfWPeRgYpRjPZLGwwkfnTfaFnNh.jpg\",\n      overview:\n        \"Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.\",\n      release_date: \"2017-10-04\",\n    },\n    {\n      id: 381283,\n      title: \"mother!\",\n      poster_path: \"/qmi2dsuoyzZdJ0WFZYQazbX8ILj.jpg\",\n      backdrop_path: \"/uuQpQ8VDOtVL2IO4y2pR58odkS5.jpg\",\n      overview:\n        \"A couple's relationship is tested when uninvited guests arrive at their home, disrupting their tranquil existence.\",\n      release_date: \"2017-09-13\",\n    },\n    {\n      id: 374720,\n      title: \"Dunkirk\",\n      poster_path: \"/ebSnODDg9lbsMIaWg2uAbjn7TO5.jpg\",\n      backdrop_path: \"/ddIkmH3TpR6XSc47jj0BrGK5Rbz.jpg\",\n      overview:\n        \"The miraculous evacuation of Allied soldiers from Belgium, Britain, Canada and France, who were cut off and surrounded by the German army from the beaches and harbor of Dunkirk, France, between May 26th and June 4th 1940, during the Battle of France in World War II.\",\n      release_date: \"2017-07-19\",\n    },\n    {\n      id: 415842,\n      title: \"American Assassin\",\n      poster_path: \"/o40BAqdTQHiN3cUfpgieDUYI71z.jpg\",\n      backdrop_path: \"/puKZWmBIpuEMwGCn2hZkublG1rO.jpg\",\n      overview:\n        \"Following the murder of his fiancée, Mitch Rapp trains under the instruction of Cold War veteran Stan Hurley. The pair then is enlisted to investigate a wave of apparently random attacks on military and civilian targets.\",\n      release_date: \"2017-09-14\",\n    },\n    {\n      id: 390043,\n      title: \"The Hitman's Bodyguard\",\n      poster_path: \"/5CGjlz2vyBhW5xHW4eNOZIdgzYq.jpg\",\n      backdrop_path: \"/7KsqfXDECZMryX1Rv4RKsT7SIjQ.jpg\",\n      overview:\n        \"The world's top bodyguard gets a new client, a hit man who must testify at the International Court of Justice. They must put their differences aside and work together to make it to the trial on time.\",\n      release_date: \"2017-08-16\",\n    },\n    {\n      id: 316154,\n      title: \"The Bad Batch\",\n      poster_path: \"/7o14VaMphEIzPwzeW6FP3A6zb4W.jpg\",\n      backdrop_path: \"/aQ06MnEDLh9X3ZOtY21UD2XB197.jpg\",\n      overview:\n        \"In a desert wasteland in Texas, a muscled cannibal breaks one important rule: don’t play with your food.\",\n      release_date: \"2017-06-23\",\n    },\n  ],\n};\n\nexport default TMDB;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FilmListing from \"./components/FilmListing\";\nimport FilmDetails from \"./components/FilmDetails\";\nimport TMDB from \"./TMDB\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      films: TMDB.films,\n      faves: [],\n      current: {},\n    };\n    this.handleFaveToggle = this.handleFaveToggle.bind(this);\n  }\n\n  handleFaveToggle = (film) => {\n    const faves = this.state.faves.slice();\n    const filmIndex = faves.indexOf(film);\n\n    if (filmIndex === -1) {\n      faves.push(film);\n      // console.log(`Adding ${film.title} to the faves...!`);\n    } else {\n      faves.splice(filmIndex, 1);\n      // console.log(`Removing ${film.title} from faves...!`);\n    }\n\n    this.setState({\n      faves: faves,\n    });\n    // The above is exactly the same as this.setState({faves}).\n    // console.log(faves);\n    // this.handleClick = this.handleClick.bind(this);\n  };\n\n  handleDetailsClick = (film, id) => {\n    // console.log(`Fetching details for ${film}`);\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${TMDB.api_key}&append_to_response=videos,images&language=en`;\n\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // console.log(data); // Take a look at what you get back.\n        this.setState({\n          current: data,\n        });\n      });\n  };\n\n  render() {\n    return (\n      //Step 1\n\n      <div className=\"film-library\">\n        <FilmListing\n          //Step 3\n          films={this.state.films}\n          faves={this.state.faves}\n          onFaveToggle={this.handleFaveToggle}\n          onDetailsClick={this.handleDetailsClick}\n        />\n\n        <FilmDetails\n          //Step 3\n          films={this.state.current}\n        />\n      </div>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}